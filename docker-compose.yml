version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mattermost-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: mmuser_password
      POSTGRES_DB: mattermost
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mmuser -d mattermost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mattermost:
    image: mattermost/mattermost-team-edition:latest
    container_name: mattermost-server
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    environment:
      MM_USERNAME: mmuser
      MM_PASSWORD: mmuser_password
      MM_DBNAME: mattermost
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://mmuser:mmuser_password@postgres:5432/mattermost?sslmode=disable
      MM_METRICSSETTINGS_ENABLE: "true"
      MM_METRICSSETTINGS_LISTENADDRESS: ":8067"
      MM_PLUGINSETTINGS_ENABLE: "true"
      MM_PLUGINSETTINGS_ENABLEUPLOADS: "true"
      MM_PLUGINSETTINGS_AUTOMATICPREPACKAGEDPLUGINS: "true"
      MM_PLUGINSETTINGS_ENABLEMARKETPLACE: "true"
      MM_PLUGINSETTINGS_REQUIREPLUGINSIGNATURE: "false"
    volumes:
      - ./config:/mattermost/config
      - ./data/mattermost:/mattermost/data
      - ./plugins:/mattermost/plugins
      - ./client/plugins:/mattermost/client/plugins
    ports:
      - "0.0.0.0:8065:8065"
      - "0.0.0.0:8067:8067"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8065/api/v4/system/ping"]
      interval: 10s
      timeout: 5s
      retries: 5 